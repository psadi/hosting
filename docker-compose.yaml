services:
  nginx-pm:
    container_name: nginx-pm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      DISABLE_IPV6: 'true'
      X_FRAME_OPTIONS: 'sameorigin'
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /tb-vol/hosting/services/data:/data
      - /tb-vol/hosting/services/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s

  portainer-ce:
      container_name: portainer
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data
      image: portainer/portainer-ce:latest
      restart: unless-stopped
      depends_on:
        - nginx-pm

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - /tb-vol/hosting/services/jellyfin/config:/config
      - /tb-vol/hosting/services/jellyfin/cache:/cache
      - /tb-vol/media/tvshows:/data/tvshows
      - /tb-vol/media/videos:/data/videos
      - /tb-vol/media/movies:/data/movies
      - /tb-vol/Pictures:/data/gallery
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  nginx-comics:
    container_name: comics
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - /tb-vol/hosting/services/nginx-comics/nginx.conf:/etc/nginx/nginx.conf
      - /tb-vol/media/comics:/usr/share/nginx/html
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:80/health'" ]
      interval: 10s
      timeout: 10s
      retries: 5

  stirling-pdf:
    container_name: s-pdf
    image: frooodle/s-pdf:latest-ultra-lite
    volumes:
      - /tb-vol/hosting/services/s-pdf/trainingData:/usr/share/tesseract-ocr/4.00/tessdata
      - /tb-vol/hosting/services/s-pdf/extraConfigs:/configs
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_US
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:8080/api/v1/info/status'" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  babybuddy:
    image: lscr.io/linuxserver/babybuddy:latest
    container_name: babybuddy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - CSRF_TRUSTED_ORIGINS=http://127.0.0.1:8000,https://babybuddy.picolo.duckdns.org
    volumes:
      - /tb-vol/hosting/services/babybuddy/config:/config
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:8000/api/profile'" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  homer:
    container_name: homer
    image: b4bz/homer:latest
    volumes:
      - /tb-vol/hosting/services/homer/assets:/www/assets
    restart: always

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - PASSWORD=$PASSWORD
      - SUDO_PASSWORD=$PASSWORD
      - DEFAULT_WORKSPACE=/config/workspace
      - PROXY_DOMAIN=code.picolo.duckdns.org
    volumes:
      - /tb-vol/hosting/services/code/config:/config
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:8443/healthz'" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  drawio:
    stdin_open: true
    tty: true
    container_name: draw
    image: jgraph/drawio
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:8080/health'" ]
      interval: 10s
      timeout: 10s
      retries: 5

  excalidraw:
    stdin_open: true
    tty: true
    container_name: excalidraw
    image: excalidraw/excalidraw:latest
    healthcheck:
      test: [ "CMD-SHELL", "curl -o /dev/null -s -w '%{http_code}' 'http://localhost:80/health'" ]
      interval: 10s
      timeout: 10s
      retries: 5

  glances:
    container_name: glances
    image: nicolargo/glances:latest
    restart: always
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "GLANCES_OPT=-w"

  pihole:
    container_name: pihole
    image: docker.io/cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAIN_NAME}
    ports:
    #      - 2011:443
      - 53:53/tcp
      - 53:53/udp
    #      - ${PIHOLE_WEBPORT:-80}:80/tcp
    environment:
      - FTLCONF_LOCAL_IPV4=${FTLCONF_LOCAL_IPV4}
      - TZ=${TZ:-UTC}
      - WEBPASSWORD=${PASSWORD}
      - WEBTHEME=${WEBTHEME:-default-dark}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC="true"
      - DNSMASQ_LISTENING=single
    volumes:
      - etc_pihole-unbound:/etc/pihole:rw
      - etc_pihole_dnsmasq-unbound:/etc/dnsmasq.d:rw
    restart: unless-stopped

volumes:
  portainer_data:
      external: true
      name: portainer_data
  etc_pihole-unbound:
  etc_pihole_dnsmasq-unbound:
